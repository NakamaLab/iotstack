services:
  influxdb:
    image: influxdb:2.7-alpine
    environment:
      - TZ=America/Buenos_Aires
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=supersecret
      - DOCKER_INFLUXDB_INIT_ORG=nakama
      - DOCKER_INFLUXDB_INIT_BUCKET=ope
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=my-super-secret-auth-token
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_RETENTION=1w
    expose:
      - 8086
    volumes:
      - influxdb-lib:/var/lib/influxdb2
    command: influxd --reporting-disabled
  mqtt:
      image: eclipse-mosquitto:latest
      container_name: mqtt
      environment:
        - TZ=America/Buenos_Aires
      expose:
        - 8883
        - 9001
      restart: always
      volumes:
        - ./config/mqtt/mosquitto.conf:/mosquitto/config/mosquitto.conf
        - ./config/mqtt/dynamic-security.json:/tmp/dynamic-security.json
        - ./data/mqtt/data:/mosquitto/data
        - ./data/mqtt/log:/mosquitto/log
  telegraf:
    image: telegraf:1.26.3-alpine
    user: telegraf:995 # utilizzar el comando `getent group` para obtener el id del grupo docker
    container_name: telegraf
    environment:
      - HOSTNAME=telegraf
      - TZ=America/Buenos_Aires
    restart: always
    links:
      # Telegraf necesita acceder a InfluxDB y a MQTT
      - influxdb
      - mqtt
    volumes:
      # Mount for telegraf configuration
      - ./config/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf
      # Mount for Docker API access
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - influxdb
      - mqtt

  grafana:
    image: grafana/grafana-oss:9.5.2
    container_name: grafana
    environment:
      - GF_INSTALL_PLUGINS=grafana-mqtt-datasource
    restart: always
    expose:
      - 3000
    links:
      - influxdb
    volumes:
      # sudo mkdir -p ./data/grafanaa; sudo chown 472:472 ./data/grafana
      - grafana-lib:/var/lib/grafana
      - grafana-log:/var/log/grafana
      - './config/grafana/grafana.ini:/etc/grafana/grafana.ini'
      - './config/grafana/datasource.yaml:/etc/grafana/provisioning/datasources/datasource.yaml'
      - './config/grafana/dashboard.yaml:/etc/grafana/provisioning/dashboards/dashboard.yaml'
      - './config/grafana/dashboards/casa.json:/app/dashboards/casa.json'
  publisher:
    build:
      context: ./publisher
      dockerfile: ./Dockerfile
    links:
      - mqtt
    depends_on:
      - mqtt
  # SOLO GENERA LOS CERTIFICADOS SI NO EXISTEN , DESPUES SE DETIENE
  certgen:
    build:
      context: ./cert-gen
      dockerfile: ./Dockerfile
    privileged: true
    volumes:
      - certs:/certificates/
      - ./config/cert-gen/certs.sh:/docker-entrypoint.d/certs.sh
  nginx:
    image: nginx:1.24
    container_name: nginx_container
    ports:
      - 8443:8443
    privileged: true
    volumes:
      - certs:/etc/ssl/private/:ro
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      certgen:
        condition: service_completed_successfully
    links:
      - grafana
      - influxdb
volumes:
  influxdb-lib:
    external: false

  grafana-lib:
    external: false

  grafana-log:
    external: false

  certs:
    external: false