version: '3'
services:
  influxdb:
    image: influxdb:1.8
    container_name: influxdb
    restart: always
    ports:
       # The API for InfluxDB is served on port 8086
      - "8086:8086"
      - "8082:8082"
      # UDP Port
      - "8089:8089"
    volumes:
      # Mount for influxdb data directory
      - ./data/influxdb/data:/var/lib/influxdb
      # Mount for influxdb configuration
      - ./config/influxdb/:/etc/influxdb/
    healthcheck:
      test: "curl -f http://localhost:8086/ping"
      interval: 3s
      timeout: 10s
      retries: 5
  postgres:
    image: postgres:15-alpine
    container_name: postgres
    environment:
      - POSTGRES_USER=iot
      - POSTGRES_PASSWORD=9Wa5mPy4Ir3
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - ./data/postgresql:/var/lib/postgresql/data/pgdata
      - ./config/postgres/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    restart: unless-stopped
    healthcheck:
        test: ["CMD-SHELL", "pg_isready"]
        interval: 10s
        timeout: 5s
        retries: 5
  pgadmin:
    privileged: true
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: fruta
    ports:
      - "5050:80"
    restart: unless-stopped
    depends_on:
        postgres:
          condition: service_healthy
  mqtt:
      image: iegomez/mosquitto-go-auth:latest
      container_name: mqtt
      restart: always
      ports:
        - "8883:1883"
        - "9001:9001"
      volumes:
        - ./config/mqtt/mosquitto.conf:/etc/mosquitto/mosquitto.conf
        - ./data/mqtt/data:/mosquitto/data
        - ./data/mqtt/log:/mosquitto/log
      depends_on:
        postgres:
          condition: service_healthy
  telegraf:
    image: telegraf:1.24.3
    container_name: telegraf
    restart: always
    links:
      # Telegraf necesita acceder a InfluxDB y a MQTT
      - influxdb
      - mqtt
    volumes:
      # Mount for telegraf configuration
      - ./config/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf
      # Mount for Docker API access
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - influxdb
      - mqtt
    environment:
      HOSTNAME: "telegraf-getting-started"
  grafana:
    image: grafana/grafana:9.2.4
    container_name: grafana
    restart: always
    ports:
      - "3000:3000"
    links:
      - influxdb
    volumes:
      # sudo mkdir -p ./data/grafanaa; sudo chown 472:472 ./data/grafana
      - './data/grafana/data.db:/app/data.db'
      - './config/grafana/grafana.ini:/etc/grafana/grafana.ini'
      - './config/grafana/datasource.yaml:/etc/grafana/provisioning/datasources/datasource.yaml'
      - './config/grafana/dashboard.yaml:/etc/grafana/provisioning/dashboards/dashboard.yaml'
      - './config/grafana/dashboards/casa.json:/app/dashboards/casa.json'
  publisher:
    build:
      context: ./publisher
      dockerfile: ./Dockerfile
    depends_on:
      - mqtt
      - telegraf
  # chronograf nos permite administrar InfluxDB
  chronograf:
    image: chronograf:1.9
    container_name: chronograf
    restart: always
    environment:
      RESOURCES_PATH: "/usr/share/chronograf/resources"
    volumes:
      # Base de datos de chronograf
      - ./data/chronograf/:/var/lib/chronograf/
    links:
      # Chronograf necesita acceder a InfluxDB
      - influxdb
    ports:
      # UI de chronograf en el puerto 8888
      - "8888:8888"